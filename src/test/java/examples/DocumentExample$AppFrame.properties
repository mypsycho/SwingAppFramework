

# Resources for the @Actions defined in DocumentExample

actionMap(open) = application#open
actionMap(open).text = &Open...
actionMap(open).icon = resources/open.png
actionMap(open).accelerator = control O
actionMap(open).shortDescription = open a file

actionMap(save) = application#save
actionMap(save).text = &Save
actionMap(save).icon = resources/save.png
actionMap(save).accelerator = control S
actionMap(save).shortDescription = save the current file

actionMap(saveAs) = application#saveAs
actionMap(saveAs).text = &Save As...
actionMap(saveAs).shortDescription = save the current file to a new location

main(?view).lineWrap = true
main(?view).wrapStyleWord = true


# Message for the ConfirmExit ExitListener

# The FileChooser uses this string to identify files with a 
# ".txt" extension.  This resource is loaded, not injected.

#title = untitled.txt - application.property(Application.id)

menuItem{app}{act} item
menuItem{app}{act}.action ->{app}actionMap({act})
menuItem{app}{act}.action.icon
menuItem{act} %{menuItem{app=}{act={act}}}


menuBar[0][0] %{menuItem{act=open}}
menuBar[0][1] %{menuItem{act=save}}
menuBar[0][2] %{menuItem{act=saveAs}}
menuBar[0][4] %{menuBar-file[0]}


menuBar[1] menu
menuBar[1].text Edit
menuBar[1][0] %{menuItem{app=application.context.}{act=cut}}
menuBar[1][1] %{menuItem{app=application.context.}{act=copy}}
menuBar[1][2] %{menuItem{app=application.context.}{act=paste}}
menuBar[1][3] %{menuItem{app=application.context.}{act=delete}}
menuBar[2] %{menuBar-help}
menuBar[3] @deprecated


# The toolbar buttons don't have text
toolButton{app}{act} button
toolButton{app}{act}.action ->{app}actionMap({act})
toolButton{app}{act}.action.text @null
toolButton{app}{act}.focusable = false
toolButton{act} %{toolButton{app=}{act={act}}}

toolBar[0] %{toolButton{act=open}}
toolBar[1] %{toolButton{act=save}}
toolBar[2] %{toolButton{app=application.context.}{act=cut}}
toolBar[3] %{toolButton{app=application.context.}{act=copy}}
toolBar[3] %{toolButton{app=application.context.}{act=paste}}

